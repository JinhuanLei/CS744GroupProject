@model MonitorNetwork.Models.NetworkModel
@{
    ViewBag.Title = "Home Page";

}
@section Scripts
{
    @Scripts.Render("~/bundles/cytoscape")
    <script src="~/Scripts/cytoscape.functions.js"></script>
    <script src="~/Scripts/cytoscape.config.js"></script>
    <script src="~/Scripts/graph.findpath.js"></script>
    <script src="~/Scripts/graph.start.stop.js"></script>
    <script src="~/Scripts/move.transaction.helpers.js"></script>
    <script src="~/Scripts/move.transaction.js"></script>
    <script>
        function setElementStates() {
            relays.forEach(function (relay) {
                if (!relay.isActive) {
                    cy.$("#r" + relay.relayID).classes('newStyle');
                }
            });

            connections.forEach(function (connection) {
                if (!connection.isActive) {
                    var elementId;
                    if (connection.relayID === null) {
                        elementId = "s" + connection.storeID + "r" + connection.destRelayID;
                    } else {
                        elementId = "r" + connection.relayID + "r" + connection.destRelayID;
                    }
                    cy.$("#" + elementId).classes('newStyle');
                }
            })
        }

        setElementStates();
    </script>
}


<div id="cy" style=" z-index: 0; overflow: hidden; width: 800px; height: 700px; margin: 0 auto; "></div>
<div class='col-md-3 my-legend'>
    <div class='legend-title'>Node Explanation</div>
    <div class='legend-scale'>
        <ul class='legend-labels'>
            <li><span style='background:#FFF000;'></span>Processing Center</li>
            <li><span class='gateway' style='background:#999999;'></span>Gateway</li>
            <li><span style='background:#000000;'></span>Relay Stations</li>
            <li><span class="store" style='background:#999999;'></span>Stores</li>
            <li><span style='background:#8080FF;'></span>Deactivate</li>
        </ul>
    </div>

</div>

<div class="col-md-2 col-md-offset-7">
    <button id="flowBtn" class="btn btn-primary" type="submit" onclick="toggleFlow()">Stop</button>
</div>

<script>

    @{
        string connections = Newtonsoft.Json.JsonConvert.SerializeObject(Model.connections);
        string relays = Newtonsoft.Json.JsonConvert.SerializeObject(Model.relays);
        string stores = Newtonsoft.Json.JsonConvert.SerializeObject(Model.stores);
        string nodes = Newtonsoft.Json.JsonConvert.SerializeObject(Model.cytoscapeNodes);
        string edges = Newtonsoft.Json.JsonConvert.SerializeObject(Model.cytoscapeEdges);
    }
    var connections = @Html.Raw(connections);
    var relays = @Html.Raw(relays);
    var stores = @Html.Raw(stores);

    var cytoscapeNodes = @Html.Raw(nodes);
    var cytoscapeEdges = @Html.Raw(edges);

    var processingCenterId = "r" + relays.find(function (relay) {
        return relay.isProcessingCenter;
    }).relayID;

    var elementQueues = {};

    function constructNodeQueues() {
        relays.forEach(function (relay) {
            elementQueues["r" + relay.relayID] = { type: "R", queue: [], limit: relay.queueLimit };
        });

        stores.forEach(function (store) {
            elementQueues["s" + store.storeID] = { type: "S", queue: [], limit: Number.MAX_SAFE_INTEGER };
        });

        connections.forEach(function (connection) {
            if (connection.relayID === null) {
                elementQueues["s" + connection.storeID + "r" + connection.destRelayID] = { type: "SR", queue: [], limit: 1 };
            } else {
                elementQueues["r" + connection.relayID + "r" + connection.destRelayID] = { type: "RR", queue: [], limit: 1 };
            }
        });

        elementQueues[processingCenterId].limit = Number.MAX_SAFE_INTEGER;
    }

    constructNodeQueues();

</script>

<div id="transactions" style="padding-top: 120px;">
    @Html.Partial("_TransactionPartial", Model.transactions)
</div>
@model IEnumerable<MonitorNetwork.Database.transaction>
@using MonitorNetwork.BLL;
@using Newtonsoft.Json;
@{ 
    SimpleAES encryptTool = new SimpleAES();
}
<table class="table">
    <tr>
        @*<th>
            Account
        </th>
        <th>
            Merchant Name
        </th>
        <th>
            Time of Transaction
        </th>
        <th>
            Time of Response
        </th>
        <th>
            Amount
        </th>
        <th>
            Credit/Debit
        </th>
        <th>
            Accepted/Rejected
        </th>*@
        <th>
            Transaction ID
        </th>
        <th>
            Encrypted Data
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        @*<td>
            @(Html.DisplayFor(modelItem => item.account.accountFirstName)) @(Html.DisplayFor(modelItem => item.account.accountLastName))
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.store.merchantName)
        </td>
        <td>
            @if(item.timeOfTransaction.HasValue)
            {
                @item.timeOfTransaction.Value.ToString("MMM dd, yyyy HH:mm");
            }
        </td>
        <td>
            @if(item.timeOfResponse.HasValue)
            {
                @item.timeOfResponse.Value.ToString("MMM dd, yyyy HH:mm");
            }
        </td>
        <td>
            $@Html.DisplayFor(modelItem => item.amount)
        </td>
        <td>
            @(item.isCredit ? "Credit" : "Debit")
        </td>
        <td>
            @if (item.timeOfResponse.HasValue)
            {
                @(item.status ? "Approved" : "Declined")
            } else
            {
                @: Unprocessed
            }
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.transactionID)
        </td>
        <td>
            @{
                if(item.isEncrypted)
                {
                    string stringify = Newtonsoft.Json.JsonConvert.SerializeObject(item, Formatting.Indented,
                    new JsonSerializerSettings
                    {
                        ReferenceLoopHandling = ReferenceLoopHandling.Ignore
                    });
                    var stringBytes = System.Text.Encoding.UTF8.GetString(encryptTool.Encrypt(stringify));

                    @(stringBytes.Length <= 70 ? stringBytes : stringBytes.Substring(0, 80) + "...");
                }
             }
        </td>
        <td>
            @if (item.isSent)
            {
                @: Sent
            }
            else
            {
                <a href="javascript:void(0)" onclick="sendTransaction(@item.transactionID)">Send</a>
            }
        </td>
    </tr>
}

</table>
